# Generated by Django 4.0.3 on 2022-03-31 13:19

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UsersHotels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(blank=True, upload_to='users_avatars')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='название')),
            ],
        ),
        migrations.CreateModel(
            name='Comforts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parking', models.BooleanField(default=False, verbose_name='парковка')),
                ('transfer', models.BooleanField(default=False, verbose_name='трансфер')),
                ('meals', models.BooleanField(default=False, verbose_name='питание')),
                ('animation', models.BooleanField(default=False, verbose_name='анимация')),
                ('fitness', models.BooleanField(default=False, verbose_name='фитнес')),
                ('pool', models.BooleanField(default=False, verbose_name='бассейн')),
                ('beach', models.BooleanField(default=False, verbose_name='пляж')),
                ('spa', models.BooleanField(default=False, verbose_name='спа-комплекс')),
                ('animals', models.BooleanField(default=False, verbose_name='животные')),
                ('wifi', models.BooleanField(default=False, verbose_name='wifi')),
                ('medical', models.BooleanField(default=False, verbose_name='медуслуги')),
            ],
        ),
        migrations.CreateModel(
            name='Hotels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='название')),
                ('address', models.CharField(max_length=100, verbose_name='адрес')),
                ('website', models.CharField(blank=True, max_length=100, verbose_name='сайт')),
                ('email', models.EmailField(max_length=254)),
                ('telephone', models.IntegerField(null=True, verbose_name='телефон')),
                ('coord_w', models.IntegerField(null=True, verbose_name='широта')),
                ('coord_l', models.IntegerField(null=True, verbose_name='долгота')),
                ('rating', models.IntegerField(null=True, verbose_name='рейтинг')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.city')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotels_images', models.ImageField(blank=True, upload_to='hotels_images')),
                ('rooms_images', models.ImageField(blank=True, upload_to='rooms_images')),
            ],
        ),
        migrations.CreateModel(
            name='Offers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=11, verbose_name='цена')),
                ('date_begin', models.DateField(verbose_name='заезд')),
                ('date_end', models.DateField(verbose_name='выезд')),
                ('adults', models.IntegerField(default=1, verbose_name='взрослые')),
                ('children', models.IntegerField(default=0, verbose_name='дети')),
                ('hotels', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.hotels')),
            ],
        ),
        migrations.CreateModel(
            name='Persons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=50, verbose_name='фамилия')),
                ('first_name', models.CharField(max_length=50, verbose_name='имя')),
                ('middle_name', models.CharField(blank=True, max_length=50, verbose_name='отчество')),
                ('birthday', models.DateField(verbose_name='день рождения')),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, verbose_name='комментарий')),
                ('code', models.CharField(max_length=100, verbose_name='номер брони')),
                ('offers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.offers')),
                ('users', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Rooms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=20, verbose_name='тип номера')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=11, verbose_name='цена номера')),
                ('image', models.ImageField(blank=True, upload_to='rooms_images')),
            ],
        ),
        migrations.CreateModel(
            name='RoomsImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotels', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.rooms')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.image')),
            ],
        ),
        migrations.CreateModel(
            name='RoomsComforts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comforts', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.comforts')),
                ('rooms', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.rooms')),
            ],
        ),
        migrations.CreateModel(
            name='ReservationPersons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Persons', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.persons')),
                ('reservation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.reservation')),
            ],
        ),
        migrations.CreateModel(
            name='HotelsRooms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotels', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.hotels')),
                ('rooms', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.rooms')),
            ],
        ),
        migrations.CreateModel(
            name='HotelsImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotels', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.hotels')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.image')),
            ],
        ),
        migrations.CreateModel(
            name='HotelsComforts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comforts', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.comforts')),
                ('hotels', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.hotels')),
            ],
        ),
    ]
